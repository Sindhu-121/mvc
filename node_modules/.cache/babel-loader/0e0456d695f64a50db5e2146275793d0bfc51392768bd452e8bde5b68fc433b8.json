{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\EGATE_OTS_MAIN_PROJECT\\\\src\\\\components\\\\Document_ImageInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Document_ImageInfo() {\n  _s();\n  const [data, setData] = useState(null);\n  const {\n    subjectId,\n    testCreationTableId\n  } = useParams();\n  useEffect(() => {\n    // const fetchData = async () => {\n    //   try {\n    //     const response = await fetch(`http://localhost:3081/getSubjectData/${subjectId}/${testCreationTableId}`);\n    //     const result = await response.json();\n    //     setData(result);\n    //   } catch (error) {\n    //     console.error('Error fetching data:', error);\n    //   }\n    // };\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3081/getSubjectData/${subjectId}/${testCreationTableId}`);\n        if (!response.ok) {\n          console.error('Server responded with an error:', response.status, response.statusText);\n          const text = await response.text();\n          console.error('Response text:', text);\n          return;\n        }\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts.\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this);\n  }\n  const OptionLabels = ['(a)', '(b)', '(c)', '(d)'];\n  // Render your component using the fetched data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Document_-images_-container otsMainPages\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [data.document.documen_name, \" \", data.document.subjectId, data.document.testCreationTableId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"q1s\",\n      style: {\n        display: 'flex',\n        gap: '4rem',\n        flexDirection: 'column',\n        width: '81vw',\n        margin: '2rem'\n      },\n      children: data.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outColor examSubjects_-contant\",\n        style: {\n          background: '',\n          padding: '2rem 2rem'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                display: 'flex',\n                gap: '1rem'\n              },\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Question \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 52\n              }, this), \" \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${question.question_img}`,\n              alt: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 10\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 10\n          }, this), data.options.filter(opt => opt.question_id === question.question_id).map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            style: {\n              display: 'flex',\n              gap: '1rem'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: OptionLabels[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${option.option_img}`,\n              alt: `Option ${OptionLabels[index]}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)]\n          }, option.question_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)), data.solutions.filter(sol => sol.question_id === question.question_id).map(solution => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solution\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"solution  \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${solution.solution_img}`,\n              alt: \"Solution\"\n            }, solution.question_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this))]\n        }, question.question_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Document_ImageInfo, \"T8an0QQv2adQMtruKalCJnMheGA=\", false, function () {\n  return [useParams];\n});\n_c = Document_ImageInfo;\nexport default Document_ImageInfo;\nvar _c;\n$RefreshReg$(_c, \"Document_ImageInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Document_ImageInfo","_s","data","setData","subjectId","testCreationTableId","fetchData","response","fetch","ok","console","error","status","statusText","text","result","json","children","fileName","_jsxFileName","lineNumber","columnNumber","OptionLabels","className","document","documen_name","style","display","gap","flexDirection","width","margin","questions","map","question","index","background","padding","src","question_img","alt","options","filter","opt","question_id","option","option_img","solutions","sol","solution","solution_img","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/EGATE_OTS_MAIN_PROJECT/src/components/Document_ImageInfo.jsx"],"sourcesContent":["\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nfunction Document_ImageInfo() {\r\n  const [data, setData] = useState(null);\r\nconst {subjectId, testCreationTableId} = useParams();\r\n  useEffect(() => {\r\n    // const fetchData = async () => {\r\n    //   try {\r\n    //     const response = await fetch(`http://localhost:3081/getSubjectData/${subjectId}/${testCreationTableId}`);\r\n    //     const result = await response.json();\r\n    //     setData(result);\r\n    //   } catch (error) {\r\n    //     console.error('Error fetching data:', error);\r\n    //   }\r\n    // };\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(`http://localhost:3081/getSubjectData/${subjectId}/${testCreationTableId}`);\r\n        \r\n        if (!response.ok) {\r\n          console.error('Server responded with an error:', response.status, response.statusText);\r\n          const text = await response.text();\r\n          console.error('Response text:', text);\r\n          return;\r\n        }\r\n    \r\n        const result = await response.json();\r\n        setData(result);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []); // The empty dependency array ensures that this effect runs once when the component mounts.\r\n\r\n  if (!data) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  const OptionLabels = ['(a)', '(b)', '(c)', '(d)'];\r\n  // Render your component using the fetched data\r\n  return (\r\n    <div className='Document_-images_-container otsMainPages'>\r\n      {/* Access data as needed, for example: */}\r\n      <h1>{data.document.documen_name} {data.document.subjectId}{data.document.testCreationTableId}</h1>\r\n      {/* Map over questions and render them */}\r\n      <div className='q1s' style={{display:'flex',gap:'4rem',flexDirection:'column',width:'81vw',margin:'2rem'}}>\r\n      {data.questions.map((question, index) => (\r\n     \r\n        <div className='outColor examSubjects_-contant' style={{background:'',padding:'2rem 2rem'}}>\r\n         <div key={question.question_id} >\r\n         <div className='question' key={index}>\r\n          <h3 style={{display:'flex',gap:'1rem'}}> <p>Question </p> {index+1}</h3>\r\n          \r\n         <img src={`data:image/png;base64,${question.question_img}`} alt=\"Question\" />\r\n         </div>\r\n          \r\n          {/* Map over options and render them */}\r\n          {data.options\r\n            .filter((opt) => opt.question_id === question.question_id)\r\n            .map((option, index) => (\r\n              <div className='option' key={option.question_id} style={{display:'flex', gap:'1rem'}}>\r\n                <span>{OptionLabels[index]}</span>\r\n                <img src={`data:image/png;base64,${option.option_img}`} alt={`Option ${OptionLabels[index]}`} />\r\n              </div>\r\n            ))}\r\n          \r\n          {/* Render solutions similarly */}\r\n          {data.solutions\r\n            .filter((sol) => sol.question_id === question.question_id)\r\n            .map((solution) => (\r\n              <div className='solution'>\r\n                <h3>solution  </h3>\r\n                <img key={solution.question_id} src={`data:image/png;base64,${solution.solution_img}`} alt=\"Solution\" />\r\n              </div>\r\n            ))}\r\n        </div>\r\n       </div>\r\n      \r\n      ))}\r\n       </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Document_ImageInfo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}