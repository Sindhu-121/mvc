{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\EGATE_OTS_MAIN_PROJECT\\\\src\\\\components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n\n// Custom hook for fetching data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useFetchCount = url => {\n  _s();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      // Assuming data is an array and the count is in the first object\n      const firstObject = data[0];\n      const totalCount = firstObject ? firstObject.count : 0;\n      console.log(\"Data received:\", totalCount);\n      setCount(totalCount);\n    }).catch(error => console.error(`Error fetching count from ${url}:`, error.message));\n  }, [url]);\n  return count;\n};\n_s(useFetchCount, \"/xL7qdScToREtqzbt5GZ1kHtYjQ=\");\nconst Dashboard = () => {\n  _s2();\n  const examCount = useFetchCount(\"http://localhost:3081/exam/count\");\n  const courseCount = useFetchCount(\"http://localhost:3081/courses/count\");\n  const testCount = useFetchCount(\"http://localhost:3081/test/count\");\n  const questionCount = useFetchCount(\"http://localhost:3081/question/count\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total Exams : \", examCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total Courses: \", courseCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total Tests: \", testCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total Questions: \", questionCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s2(Dashboard, \"SOBtms8Xvv+nz6hum5fzNK4RNrc=\", false, function () {\n  return [useFetchCount, useFetchCount, useFetchCount, useFetchCount];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","useFetchCount","url","_s","count","setCount","fetch","then","response","ok","Error","json","data","firstObject","totalCount","console","log","catch","error","message","Dashboard","_s2","examCount","courseCount","testCount","questionCount","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/EGATE_OTS_MAIN_PROJECT/src/components/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\n// Custom hook for fetching data\r\nconst useFetchCount = (url) => {\r\n  const [count, setCount] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        // Assuming data is an array and the count is in the first object\r\n        const firstObject = data[0];\r\n        const totalCount = firstObject ? firstObject.count : 0;\r\n\r\n        console.log(\"Data received:\", totalCount);\r\n        setCount(totalCount);\r\n      })\r\n      .catch((error) =>\r\n        console.error(`Error fetching count from ${url}:`, error.message)\r\n      );\r\n  }, [url]);\r\n\r\n  return count;\r\n};\r\n\r\nconst Dashboard = () => {\r\n  const examCount = useFetchCount(\"http://localhost:3081/exam/count\");\r\n  const courseCount = useFetchCount(\"http://localhost:3081/courses/count\");\r\n  const testCount = useFetchCount(\"http://localhost:3081/test/count\");\r\n  const questionCount = useFetchCount(\"http://localhost:3081/question/count\");\r\n\r\n  return (\r\n    <div>\r\n      <h2>Total Exams : {examCount}</h2>\r\n      <h2>Total Courses: {courseCount}</h2>\r\n      <h2>Total Tests: {testCount}</h2>\r\n      <h2>Total Questions: {questionCount}</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACdQ,KAAK,CAACJ,GAAG,CAAC,CACPK,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd;MACA,MAAMC,WAAW,GAAGD,IAAI,CAAC,CAAC,CAAC;MAC3B,MAAME,UAAU,GAAGD,WAAW,GAAGA,WAAW,CAACT,KAAK,GAAG,CAAC;MAEtDW,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,UAAU,CAAC;MACzCT,QAAQ,CAACS,UAAU,CAAC;IACtB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IACXH,OAAO,CAACG,KAAK,CAAE,6BAA4BhB,GAAI,GAAE,EAAEgB,KAAK,CAACC,OAAO,CAClE,CAAC;EACL,CAAC,EAAE,CAACjB,GAAG,CAAC,CAAC;EAET,OAAOE,KAAK;AACd,CAAC;AAACD,EAAA,CAzBIF,aAAa;AA2BnB,MAAMmB,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACtB,MAAMC,SAAS,GAAGrB,aAAa,CAAC,kCAAkC,CAAC;EACnE,MAAMsB,WAAW,GAAGtB,aAAa,CAAC,qCAAqC,CAAC;EACxE,MAAMuB,SAAS,GAAGvB,aAAa,CAAC,kCAAkC,CAAC;EACnE,MAAMwB,aAAa,GAAGxB,aAAa,CAAC,sCAAsC,CAAC;EAE3E,oBACED,OAAA;IAAA0B,QAAA,gBACE1B,OAAA;MAAA0B,QAAA,GAAI,gBAAc,EAACJ,SAAS;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClC9B,OAAA;MAAA0B,QAAA,GAAI,iBAAe,EAACH,WAAW;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrC9B,OAAA;MAAA0B,QAAA,GAAI,eAAa,EAACF,SAAS;IAAA;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjC9B,OAAA;MAAA0B,QAAA,GAAI,mBAAiB,EAACD,aAAa;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEV,CAAC;AAACT,GAAA,CAdID,SAAS;EAAA,QACKnB,aAAa,EACXA,aAAa,EACfA,aAAa,EACTA,aAAa;AAAA;AAAA8B,EAAA,GAJ/BX,SAAS;AAgBf,eAAeA,SAAS;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}