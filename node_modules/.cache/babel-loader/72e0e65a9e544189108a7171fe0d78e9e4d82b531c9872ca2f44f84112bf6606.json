{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { useParams } from 'react-router-dom';\n\n// function Document_ImageInfo() {\n//   const [data, setData] = useState(null);\n// const {subjectId, testCreationTableId} = useParams();\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const response = await fetch(`http://localhost:3081/getSubjectData/${subjectId}/${testCreationTableId}`);\n//         const result = await response.json();\n//         setData(result);\n//       } catch (error) {\n//         console.error('Error fetching data:', error);\n//       }\n//     };\n\n//     fetchData();\n//   }, []); // The empty dependency array ensures that this effect runs once when the component mounts.\n\n//   if (!data) {\n//     return <div>Loading...</div>;\n//   }\n\n//   // Render your component using the fetched data\n//   return (\n//     <div>\n//       {/* Access data as needed, for example: */}\n//       <h1>{data.document.documen_name} {data.document.subjectId}{data.document.testCreationTableId}</h1>\n//       {/* Map over questions and render them */}\n//       <div className='q1s' style={{display:'flex',gap:'4rem',flexDirection:'column',width:'85vw',margin:'2rem'}}>\n//       {data.questions.map((question, index) => (\n\n//         <div className='outColor' style={{background:'#e5e5e5',padding:'2rem 2rem'}}>\n//          <div key={question.question_id} >\n//          <div className='question' key={index}>\n//           <h3>{index+1}</h3>\n//          <img src={`data:image/png;base64,${question.question_img}`} alt=\"Question\" />\n//          </div>\n\n//           {/* Map over options and render them */}\n//           {data.options\n//             .filter((opt) => opt.question_id === question.question_id)\n//             .map((option) => (\n//              <div className='option'>\n//                  <img key={option.question_id} src={`data:image/png;base64,${option.option_img}`} alt=\"Option\" />\n//              </div>\n//             ))}\n\n//           {/* Render solutions similarly */}\n//           {data.solutions\n//             .filter((sol) => sol.question_id === question.question_id)\n//             .map((solution) => (\n//               <div className='solution'>\n//                 <img key={solution.question_id} src={`data:image/png;base64,${solution.solution_img}`} alt=\"Solution\" />\n//               </div>\n//             ))}\n//         </div>\n//        </div>\n\n//       ))}\n//        </div>\n//     </div>\n//   );\n// }\n\n// export default Document_ImageInfo;","map":{"version":3,"names":[],"sources":["C:/Users/USER/Desktop/EGATE_OTS_MAIN_PROJECT/src/Frontend/Pages/Paper/Document_ImageInfo.jsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { useParams } from 'react-router-dom';\r\n \r\n// function Document_ImageInfo() {\r\n//   const [data, setData] = useState(null);\r\n// const {subjectId, testCreationTableId} = useParams();\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const response = await fetch(`http://localhost:3081/getSubjectData/${subjectId}/${testCreationTableId}`);\r\n//         const result = await response.json();\r\n//         setData(result);\r\n//       } catch (error) {\r\n//         console.error('Error fetching data:', error);\r\n//       }\r\n//     };\r\n \r\n//     fetchData();\r\n//   }, []); // The empty dependency array ensures that this effect runs once when the component mounts.\r\n \r\n//   if (!data) {\r\n//     return <div>Loading...</div>;\r\n//   }\r\n \r\n//   // Render your component using the fetched data\r\n//   return (\r\n//     <div>\r\n//       {/* Access data as needed, for example: */}\r\n//       <h1>{data.document.documen_name} {data.document.subjectId}{data.document.testCreationTableId}</h1>\r\n//       {/* Map over questions and render them */}\r\n//       <div className='q1s' style={{display:'flex',gap:'4rem',flexDirection:'column',width:'85vw',margin:'2rem'}}>\r\n//       {data.questions.map((question, index) => (\r\n     \r\n//         <div className='outColor' style={{background:'#e5e5e5',padding:'2rem 2rem'}}>\r\n//          <div key={question.question_id} >\r\n//          <div className='question' key={index}>\r\n//           <h3>{index+1}</h3>\r\n//          <img src={`data:image/png;base64,${question.question_img}`} alt=\"Question\" />\r\n//          </div>\r\n         \r\n//           {/* Map over options and render them */}\r\n//           {data.options\r\n//             .filter((opt) => opt.question_id === question.question_id)\r\n//             .map((option) => (\r\n//              <div className='option'>\r\n//                  <img key={option.question_id} src={`data:image/png;base64,${option.option_img}`} alt=\"Option\" />\r\n//              </div>\r\n//             ))}\r\n         \r\n//           {/* Render solutions similarly */}\r\n//           {data.solutions\r\n//             .filter((sol) => sol.question_id === question.question_id)\r\n//             .map((solution) => (\r\n//               <div className='solution'>\r\n//                 <img key={solution.question_id} src={`data:image/png;base64,${solution.solution_img}`} alt=\"Solution\" />\r\n//               </div>\r\n//             ))}\r\n//         </div>\r\n//        </div>\r\n     \r\n//       ))}\r\n//        </div>\r\n//     </div>\r\n//   );\r\n// }\r\n \r\n// export default Document_ImageInfo;\r\n "],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}