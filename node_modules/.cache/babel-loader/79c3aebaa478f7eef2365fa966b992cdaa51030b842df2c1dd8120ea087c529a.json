{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\EGATE_OTS_MAIN_PROJECT\\\\src\\\\components\\\\Document_ImageInfo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Document_ImageInfo() {\n  _s();\n  const [data, setData] = useState(null);\n  const {\n    subjectId,\n    testCreationTableId\n  } = useParams();\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`http://localhost:3081/getSubjectData/${subjectId}/${testCreationTableId}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const result = await response.json();\n      setData(result);\n    } catch (error) {\n      console.error(\"Error fetching data:\", error.message);\n      // Handle the error, e.g., show an error message to the user\n    }\n  };\n\n  if (!data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  const OptionLabels = [\"(a)\", \"(b)\", \"(c)\", \"(d)\"];\n  // Render your component using the fetched data\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Document_-images_-container otsMainPages\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [data.document.documen_name, \" \", data.document.subjectId, data.document.testCreationTableId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"q1s\",\n      style: {\n        display: \"flex\",\n        gap: \"4rem\",\n        flexDirection: \"column\",\n        width: \"81vw\",\n        margin: \"2rem\"\n      },\n      children: data.questions.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"outColor examSubjects_-contant\",\n        style: {\n          background: \"\",\n          padding: \"2rem 2rem\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              style: {\n                display: \"flex\",\n                gap: \"1rem\"\n              },\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Question \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, this), \" \", index + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${question.question_img}`,\n              alt: \"Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), data.options.filter(opt => opt.question_id === question.question_id).map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"option\",\n            style: {\n              display: \"flex\",\n              gap: \"1rem\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: OptionLabels[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${option.option_img}`,\n              alt: `Option ${OptionLabels[index]}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)]\n          }, option.question_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 19\n          }, this)), data.solutions.filter(sol => sol.question_id === question.question_id).map(solution => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"solution\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"solution \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `data:image/png;base64,${solution.solution_img}`,\n              alt: \"Solution\"\n            }, solution.question_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this)), data.answers.filter(ans => ans.question_id === question.question_id).map(answer => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Answer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this), answer.answer_text]\n          }, answer.answer_id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this)), data.marks.filter(markes => markes.question_id === question.question_id).map(markes => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Marks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this), markes.marks_text]\n          }, markes.markesId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 19\n          }, this)), data.qtypes.filter(qtype => qtype.question_id === question.question_id).map(qtype => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"QType\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this), console.log(\"QType Text:\", qtype.qtype_text), qtype.qtype_text]\n          }, qtype.qtypeId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 19\n          }, this))]\n        }, question.question_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(Document_ImageInfo, \"zIMRdvCdHoBlILYGiWkwakG9lro=\", false, function () {\n  return [useParams];\n});\n_c = Document_ImageInfo;\nexport default Document_ImageInfo;\nvar _c;\n$RefreshReg$(_c, \"Document_ImageInfo\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","Document_ImageInfo","_s","data","setData","subjectId","testCreationTableId","fetchData","response","fetch","ok","Error","status","result","json","error","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","OptionLabels","className","document","documen_name","style","display","gap","flexDirection","width","margin","questions","map","question","index","background","padding","src","question_img","alt","options","filter","opt","question_id","option","option_img","solutions","sol","solution","solution_img","answers","ans","answer","answer_text","answer_id","marks","markes","marks_text","markesId","qtypes","qtype","log","qtype_text","qtypeId","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/EGATE_OTS_MAIN_PROJECT/src/components/Document_ImageInfo.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nfunction Document_ImageInfo() {\r\n  const [data, setData] = useState(null);\r\n  const { subjectId, testCreationTableId } = useParams();\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n  const fetchData = async () => {\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3081/getSubjectData/${subjectId}/${testCreationTableId}`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! Status: ${response.status}`);\r\n      }\r\n\r\n      const result = await response.json();\r\n      setData(result);\r\n    } catch (error) {\r\n      console.error(\"Error fetching data:\", error.message);\r\n      // Handle the error, e.g., show an error message to the user\r\n    }\r\n  };\r\n\r\n  if (!data) {\r\n    return <div>Loading...</div>;\r\n  }\r\n  const OptionLabels = [\"(a)\", \"(b)\", \"(c)\", \"(d)\"];\r\n  // Render your component using the fetched data\r\n  return (\r\n    <div className=\"Document_-images_-container otsMainPages\">\r\n      {/* Access data as needed, for example: */}\r\n      <h1>\r\n        {data.document.documen_name} {data.document.subjectId}\r\n        {data.document.testCreationTableId}\r\n      </h1>\r\n      {/* Map over questions and render them */}\r\n      <div\r\n        className=\"q1s\"\r\n        style={{\r\n          display: \"flex\",\r\n          gap: \"4rem\",\r\n          flexDirection: \"column\",\r\n          width: \"81vw\",\r\n          margin: \"2rem\",\r\n        }}\r\n      >\r\n        {data.questions.map((question, index) => (\r\n          <div\r\n            className=\"outColor examSubjects_-contant\"\r\n            style={{ background: \"\", padding: \"2rem 2rem\" }}\r\n          >\r\n            <div key={question.question_id}>\r\n              <div className=\"question\" key={index}>\r\n                <h3 style={{ display: \"flex\", gap: \"1rem\" }}>\r\n                  {\" \"}\r\n                  <p>Question </p> {index + 1}\r\n                </h3>\r\n\r\n                <img\r\n                  src={`data:image/png;base64,${question.question_img}`}\r\n                  alt=\"Question\"\r\n                />\r\n              </div>\r\n\r\n              {data.options\r\n                .filter((opt) => opt.question_id === question.question_id)\r\n                .map((option, index) => (\r\n                  <div\r\n                    className=\"option\"\r\n                    key={option.question_id}\r\n                    style={{ display: \"flex\", gap: \"1rem\" }}\r\n                  >\r\n                    <span>{OptionLabels[index]}</span>\r\n                    <img\r\n                      src={`data:image/png;base64,${option.option_img}`}\r\n                      alt={`Option ${OptionLabels[index]}`}\r\n                    />\r\n                  </div>\r\n                ))}\r\n\r\n              {data.solutions\r\n                .filter((sol) => sol.question_id === question.question_id)\r\n                .map((solution) => (\r\n                  <div className=\"solution\">\r\n                    <h3>solution </h3>\r\n                    <img\r\n                      key={solution.question_id}\r\n                      src={`data:image/png;base64,${solution.solution_img}`}\r\n                      alt=\"Solution\"\r\n                    />\r\n                  </div>\r\n                ))}\r\n\r\n              {data.answers\r\n                .filter((ans) => ans.question_id === question.question_id)\r\n                .map((answer) => (\r\n                  <div key={answer.answer_id}>\r\n                    <h3>Answer</h3>\r\n                   \r\n                    {answer.answer_text}\r\n                  </div>\r\n                ))}\r\n\r\n              {data.marks\r\n                .filter((markes) => markes.question_id === question.question_id)\r\n                .map((markes) => (\r\n                  <div key={markes.markesId}>\r\n                    <h3>Marks</h3>\r\n                 \r\n                    {markes.marks_text}\r\n                  </div>\r\n                ))}\r\n\r\n              {data.qtypes\r\n                .filter((qtype) => qtype.question_id === question.question_id)\r\n                .map((qtype) => (\r\n                  <div key={qtype.qtypeId}>\r\n                    <h3>QType</h3>\r\n                    {console.log(\"QType Text:\", qtype.qtype_text)}\r\n                    {qtype.qtype_text}\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Document_ImageInfo;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}