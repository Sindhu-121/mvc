{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\EGATE_OTS_MAIN_PROJECT\\\\src\\\\components\\\\Coursecreation.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./admin.css\";\nimport { Link } from \"react-router-dom\";\nimport \"./css/Coursecreation.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Coursecreation = () => {\n  _s();\n  const [Discount, setDiscount] = useState('');\n  const [cost, setCost] = useState('');\n  // const [courseName, setCourseName] = useState([]);\n  const [courseName, setCourseName] = useState('');\n  const [typeOfTest, setTypeOfTest] = useState([]);\n  const [selectedtypeOfTest, setSelectedtypeOfTest] = useState([]);\n  const [exams, setExams] = useState([]);\n  const [selectedexams, setSelectedexams] = useState(\"\");\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\n  const [typeofQuestion, setTypeofQuestion] = useState([]);\n  const [selectedtypeofQuestion, setSelectedtypeofQuestion] = useState([]);\n  const [startDate, setStartDate] = useState(\"\");\n  const [endDate, setEndDate] = useState(\"\");\n  const [subjectsData, setSubjectsData] = useState([]);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [courseData, setCourseData] = useState([]);\n  const [formErrors, setFormErrors] = useState({});\n  const [submitting, setSubmitting] = useState(false);\n  const validateForm = () => {\n    const errors = {};\n    if (!formData.courseName.trim()) {\n      errors.courseName = 'required';\n    }\n    if (!formData.startDate) {\n      errors.startDate = 'required';\n    }\n    if (!formData.endDate) {\n      errors.endDate = 'required';\n    } else if (new Date(formData.endDate) < new Date(formData.startDate)) {\n      errors.endDate = 'End Date must be after Start Date';\n    }\n    if (!cost) {\n      errors.cost = ' required';\n    }\n    if (!Discount) {\n      errors.Discount = ' required';\n    }\n\n    // if (selectedSubjects.length === 0) {\n    //   errors.subjects = 'At least one subject must be selected';\n    // }\n    if (selectedtypeOfTest.length === 0) {\n      errors.typeOfTest = 'At least one Type of Test must be selected';\n    }\n    if (selectedtypeofQuestion.length === 0) {\n      errors.typeofQuestion = 'At least one Type of Question must be selected';\n    }\n    if (!selectedexams) {\n      errors.examId = 'Select Exam is required';\n    }\n    if (selectedSubjects.length === 0) {\n      errors.subjects = 'At least one subject must be selected';\n    }\n    if (!duration || isNaN(duration) || duration <= 0) {\n      errors.duration = 'Please enter a valid duration (in minutes)';\n    }\n    if (!totalQuestions || isNaN(totalQuestions) || totalQuestions <= 0) {\n      errors.totalQuestions = 'Please enter a valid total number of questions';\n    }\n    if (!totalMarks || isNaN(totalMarks) || totalMarks <= 0) {\n      errors.totalMarks = 'Please enter a valid total marks';\n    }\n    if (!selectedInstruction) {\n      errors.selectedInstruction = 'Please select an instruction';\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n  const resetFormFields = () => {\n    setFormData({\n      courseName: \"\",\n      examId: \"\",\n      typeofQuestion: \"\",\n      courseStartDate: \"\",\n      courseEndDate: \"\",\n      cost: \"\",\n      discount: \"\",\n      discountAmount: \"\",\n      totalPrice: \"\"\n    });\n    setSelectedSubjects([]);\n    setSelectedtypeofQuestion([]);\n    setSelectedtypeOfTest([]);\n    setIsFormOpen(false);\n    setFormErrors({});\n  };\n  const [formData, setFormData] = useState({\n    courseName: \"\",\n    examId: \"\",\n    typeofQuestion: \"\",\n    courseStartDate: \"\",\n    courseEndDate: \"\",\n    cost: \"\",\n    discount: \"\",\n    discountAmount: \"\",\n    totalPrice: \"\"\n  });\n  useEffect(() => {\n    const fetchSelectedExam = async () => {\n      try {\n        const response = await fetch(`http://localhost:3081/courese-exams/${selectedexams}`);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const data = await response.json();\n        console.log(\"Selected Exam Data:\", data); // Log the fetched data\n\n        // Update your state or perform additional actions with the fetched data\n      } catch (error) {\n        console.error(\"Error fetching selected exam:\", error);\n      }\n    };\n    fetchSelectedExam();\n  }, [selectedexams]);\n  useEffect(() => {\n    const fetchCourseData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3081/course_creation_table\");\n        const result = await response.json();\n        const coursesWithArrays = result.map(course => ({\n          ...course,\n          typeOfTestName: course.type_of_test ? course.type_of_test.split(\", \") : [],\n          subjects: course.subjects ? course.subjects.split(\", \") : [],\n          typeofQuestion: course.question_types ? course.question_types.split(\", \") : []\n        }));\n        setCourseData(coursesWithArrays);\n      } catch (error) {\n        console.error(\"Error fetching course data:\", error);\n      }\n    };\n    fetchCourseData();\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:3081/courese-exams\").then(response => response.json()).then(data => {\n      setExams(data);\n    }).catch(error => console.error(\"Error fetching exams:\", error));\n  }, []);\n  const handleexams = async event => {\n    const selectedExamId = event.target.value;\n    console.log(\"Selected Exam ID:\", selectedExamId);\n    setSelectedexams(selectedExamId);\n    console.log(\"Selected Exam ID (after setting):\", selectedexams);\n    try {\n      const response = await fetch(`http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`);\n      const data = await response.json();\n      console.log(\"Subjects Data:\", data); // Log the fetched data\n      setSubjectsData(data); // Update subjectsData state\n      setSelectedSubjects([]); // Reset selected subjects\n    } catch (error) {\n      console.error(\"Error fetching subjects:\", error);\n    }\n    setSelectedexams(selectedExamId);\n  };\n\n  // const handleSubjectChange = (event, subjectId) => {\n  //   const { checked } = event.target;\n\n  //   const subject = subjectsData.find((subj) => subj.subjectId === subjectId);\n\n  //   if (subject) {\n  //     setSelectedSubjects((prevSelectedSubjects) => {\n  //       const updatedSelectedSubjects = checked\n  //         ? [...prevSelectedSubjects, subjectId]\n  //         : prevSelectedSubjects.filter((id) => id !== subjectId);\n\n  //       console.log('Selected Subjects:', updatedSelectedSubjects);\n  //       return updatedSelectedSubjects;\n  //     });\n  //   }\n  // };\n  const handleSubjectChange = (event, subjectId) => {\n    const {\n      checked\n    } = event.target;\n    setSelectedSubjects(prevSelectedSubjects => {\n      if (checked) {\n        // Add the subjectId to the array if it's not already present\n        return [...new Set([...prevSelectedSubjects, subjectId])];\n      } else {\n        // Remove the subjectId from the array\n        return prevSelectedSubjects.filter(id => id !== subjectId);\n      }\n    });\n  };\n  useEffect(() => {\n    const fetchTypeOfTest = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3081/type_of_tests\");\n        const result = await response.json();\n        setTypeOfTest(result);\n      } catch (error) {\n        console.error(\"Error fetching Type of questions:\", error);\n      }\n    };\n    fetchTypeOfTest();\n  }, []);\n  const handletypeoftest = (event, typeOfTestId) => {\n    const {\n      checked\n    } = event.target;\n    setSelectedtypeOfTest(prevSelectedTest => {\n      const updatedSelectedTest = checked ? [...prevSelectedTest, typeOfTestId] : prevSelectedTest.filter(id => id !== typeOfTestId);\n      console.log(\"Selected Type of Test:\", updatedSelectedTest);\n      return updatedSelectedTest;\n    });\n  };\n  const handleQuestionChange = (event, questionTypeId) => {\n    const {\n      checked\n    } = event.target;\n    setSelectedtypeofQuestion(prevSelectedQuestions => {\n      const updatedSelectedQuestions = checked ? [...prevSelectedQuestions, questionTypeId] : prevSelectedQuestions.filter(id => id !== questionTypeId);\n      console.log(\"Selected Type of Questions:\", updatedSelectedQuestions);\n      return updatedSelectedQuestions;\n    });\n  };\n  useEffect(() => {\n    const fetchTypeOfQuestion = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3081/type_of_questions\");\n        const result = await response.json();\n        // console.log(\"Type of Questions Data:\", result); // Add this line to log the data\n        setTypeofQuestion(result);\n      } catch (error) {\n        console.error(\"Error fetching Type of questions:\", error);\n      }\n    };\n    fetchTypeOfQuestion();\n  }, []);\n  const handleStartDateChange = e => {\n    const formattedDate = e.target.value;\n    setStartDate(formattedDate);\n  };\n  const handleEndDateChange = e => {\n    const formattedDate = e.target.value;\n    setEndDate(formattedDate);\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === \"cost\" || name === \"discount\") {\n      const cost = name === \"cost\" ? parseFloat(value) : formData.cost;\n      const discount = name === \"discount\" ? parseFloat(value) : formData.discount;\n      const discountAmount = !isNaN(cost) && !isNaN(discount) ? cost * discount / 100 : \"\";\n      const totalPrice = !isNaN(cost) && !isNaN(discountAmount) ? cost - discountAmount : \"\";\n      setFormData({\n        ...formData,\n        typeOfTest: selectedtypeOfTest,\n        examId: selectedexams,\n        subjects: selectedSubjects,\n        typeofQuestion: selectedtypeofQuestion,\n        courseStartDate: startDate,\n        courseEndDate: endDate,\n        cost: cost,\n        discount: discount,\n        discountAmount: discountAmount,\n        totalPrice: totalPrice\n      });\n    } else if (name === \"courseStartDate\" || name === \"courseEndDate\") {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const requiredFields = [\"courseName\", \"examId\", \"courseStartDate\", \"courseEndDate\", \"cost\", \"discount\", \"totalPrice\"];\n\n    // const isEmptyField = requiredFields.some((field) => !formData[field]);\n\n    // if (isEmptyField) {\n    //   alert(\"Please fill in all required fields.\");\n    //   return;\n    // }\n    // window.location.reload();\n\n    // resetFormFields();\n\n    const data = {\n      ...formData,\n      typeOfTest: selectedtypeOfTest,\n      examId: selectedexams,\n      subjects: selectedSubjects,\n      typeofQuestion: selectedtypeofQuestion\n    };\n    if (validateForm()) {\n      setSubmitting(true);\n      try {\n        const response = await fetch(\"http://localhost:3081/course-creation\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(data)\n        });\n        const result = await response.json();\n        if (result && result.courseCreationId) {\n          const courseCreationId = result.courseCreationId;\n          const subjectsResponse = await fetch(\"http://localhost:3081/course_type_of_question\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              courseCreationId,\n              subjectIds: selectedSubjects,\n              typeofQuestion: selectedtypeofQuestion,\n              typeOfTestIds: selectedtypeOfTest\n            })\n          });\n          const subjectsResult = await subjectsResponse.json();\n          console.log(\"Subjects Result:\", subjectsResult);\n          console.log(result);\n          if (result.success) {\n            console.log(\"Course created successfully\");\n          } else {\n            console.log(\"Failed to create course:\", result.error);\n          }\n        } else {\n          console.log(\"Failed to create course. Unexpected response:\", result);\n        }\n      } catch (error) {\n        console.error(\"Error submitting course data:\", error);\n        // Handle error or show an error message to the user\n      }\n\n      setCourseName('');\n      setStartDate('');\n      setEndDate('');\n      setCost('');\n      setDiscount('');\n      setFormErrors({});\n      setIsFormOpen(false);\n      setSubmitting(false);\n    }\n  };\n\n  // function formatDate(dateString) {\n  //   const date = new Date(dateString);\n  //   const day = date.getDate().toString().padStart(2, \"0\");\n  //   const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Month is 0-based\n  //   const year = date.getFullYear();\n  //   return `${day}/${month}/${year}`;\n  // }\n\n  const handleDelete = async courseCreationId => {\n    // Display a confirmation dialog before deleting\n    const confirmDelete = window.confirm(\"Are you sure you want to delete this course?\");\n    if (confirmDelete) {\n      try {\n        const response = await fetch(`http://localhost:3081/course_creation_table_Delete/${courseCreationId}`, {\n          method: \"DELETE\"\n        });\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const result = await response.json();\n        console.log(result.message);\n        const updatedCourseData = courseData.filter(course => course.courseCreationId !== courseCreationId);\n        console.log(\"Before:\", courseData);\n        console.log(\"After:\", updatedCourseData);\n        setCourseData(updatedCourseData);\n      } catch (error) {\n        console.error(\"Error deleting course:\", error);\n      }\n    } else {\n      // The user canceled the deletion\n      console.log(\"Deletion canceled.\");\n    }\n  };\n  const openForm = () => {\n    setIsFormOpen(true);\n    if (isFormOpen) {\n      resetFormFields();\n    }\n  };\n  const closeForm = () => {\n    setIsFormOpen(false);\n    if (isFormOpen) {\n      resetFormFields();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"otsMainPages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Coures_-otsTitels\",\n        children: \"Courses page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), isFormOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create_exam_header\",\n            style: {\n              display: \"flex\",\n              gap: \"1rem\"\n            },\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"ots_btnClose \",\n              type: \"button\",\n              onClick: closeForm,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"coures_-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coures-contant_-flexCOntantc examSubjects_-contant\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCreation_-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"courseName\",\n                  children: \"Course Name:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  id: \"courseName\",\n                  name: \"courseName\",\n                  value: formData.courseName,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this), formErrors.courseName && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa-solid fa-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 493,\n                    columnNumber: 79\n                  }, this), formErrors.courseName]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 47\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCreation_-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"type of test:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coures_-typeOfTest\",\n                  children: [typeOfTest.map(typeofTest => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"course_checkbox_continer course_frominput_container_media\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `question-${typeofTest.typeOfTestId}`,\n                      children: typeofTest.typeOfTestName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 504,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"inputLable\",\n                      type: \"checkbox\",\n                      id: `typeofTest-${typeofTest.typeOfTestId}`,\n                      name: `typeofTest-${typeofTest.typeOfTestId}`,\n                      value: typeofTest.typeOfTestId,\n                      checked: selectedtypeOfTest.includes(typeofTest.typeOfTestId),\n                      onChange: e => handletypeoftest(e, typeofTest.typeOfTestId)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 509,\n                      columnNumber: 27\n                    }, this)]\n                  }, typeofTest.typeOfTestId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 500,\n                    columnNumber: 25\n                  }, this)), formErrors.typeOfTest && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error-message\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa-solid fa-circle\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 524,\n                      columnNumber: 84\n                    }, this), formErrors.typeOfTest]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 524,\n                    columnNumber: 52\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coures-contant_-flexCOntantc examSubjects_-contant\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCreation_-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"exams\",\n                  children: \"Select Exam:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  id: \"exams\",\n                  value: selectedexams,\n                  onChange: handleexams,\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"\",\n                    children: \"Select exams\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 23\n                  }, this), exams.map(exams => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: exams.examId,\n                    children: exams.examName\n                  }, exams.examId, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 539,\n                    columnNumber: 25\n                  }, this))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 21\n                }, this), \" \", formErrors.examId && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa-solid fa-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 543,\n                    columnNumber: 85\n                  }, this), formErrors.examId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 530,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCreation_-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Select Subjects:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"coures_-Subjects\",\n                  children: [subjectsData.map(subject => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"course_frominput_container \",\n                    id: \"course_frominput_container_media\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `subject-${subject.subjectId}`,\n                      children: subject.subjectName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"inputLable\",\n                      type: \"checkbox\",\n                      id: `subject-${subject.subjectId}`,\n                      name: `subject-${subject.subjectId}`,\n                      value: subject.subjectId,\n                      checked: selectedSubjects.includes(subject.subjectId),\n                      onChange: e => handleSubjectChange(e, subject.subjectId)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 558,\n                      columnNumber: 27\n                    }, this)]\n                  }, subject.subjectId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 550,\n                    columnNumber: 25\n                  }, this)), formErrors.subjectsData && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error-message\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa-solid fa-circle\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 572,\n                      columnNumber: 86\n                    }, this), formErrors.subjectsData]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 572,\n                    columnNumber: 54\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 548,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 546,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coures-contant_-flexCOntantc examSubjects_-contant\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCreation_-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"type of Questions:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"course_checkbox_continer_content\",\n                  children: [typeofQuestion.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"course_checkbox_continer course_frominput_container_media\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      htmlFor: `question-${type.quesionTypeId}`,\n                      children: type.typeofQuestion\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 586,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      className: \"inputLable\",\n                      type: \"checkbox\",\n                      id: `question-${type.quesionTypeId}`,\n                      name: `question-${type.quesionTypeId}`,\n                      value: type.quesionTypeId,\n                      checked: selectedtypeofQuestion.includes(type.quesionTypeId),\n                      onChange: e => handleQuestionChange(e, type.quesionTypeId)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 589,\n                      columnNumber: 27\n                    }, this)]\n                  }, type.quesionTypeId, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 582,\n                    columnNumber: 25\n                  }, this)), \" \", formErrors.typeofQuestion && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"error-message\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa-solid fa-circle\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 603,\n                      columnNumber: 89\n                    }, this), formErrors.typeofQuestion]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 603,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 580,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 578,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coures-contant_-flexCOntantc examSubjects_-contant\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCreation_-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"courseStartDate\",\n                  children: \"Course Start Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"courseStartDate\",\n                  name: \"courseStartDate\",\n                  value: startDate,\n                  onChange: handleStartDateChange,\n                  min: new Date().toISOString().split(\"T\")[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 21\n                }, this), \" \", formErrors.startDate && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa-solid fa-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 618,\n                    columnNumber: 81\n                  }, this), formErrors.startDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 609,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCreation_-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"courseEndDate\",\n                  children: \"Course End Date:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 622,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"date\",\n                  id: \"courseEndDate\",\n                  name: \"courseEndDate\",\n                  value: endDate,\n                  onChange: handleEndDateChange,\n                  min: new Date().toISOString().split(\"T\")[0]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 623,\n                  columnNumber: 21\n                }, this), formErrors.endDate && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa-solid fa-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 76\n                  }, this), formErrors.endDate]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 631,\n                  columnNumber: 44\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coures-contant_-flexCOntantc examSubjects_-contant\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCreation_-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"cost\",\n                  children: \"Cost:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"cost\",\n                  name: \"cost\",\n                  value: formData.cost,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 21\n                }, this), \"  \", formErrors.cost && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa-solid fa-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 644,\n                    columnNumber: 77\n                  }, this), formErrors.cost]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 644,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCreation_-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"discount\",\n                  children: \"Discount (%):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"discount\",\n                  name: \"discount\",\n                  value: formData.discount,\n                  onChange: handleChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 648,\n                  columnNumber: 21\n                }, this), \" \", formErrors.discount && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"error-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa-solid fa-circle\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 654,\n                    columnNumber: 80\n                  }, this), formErrors.discount]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 654,\n                  columnNumber: 48\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"coures-contant_-flexCOntantc examSubjects_-contant\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCreation_-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"discountAmount\",\n                  children: \"Discount Amount:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 660,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"discountAmount\",\n                  name: \"discountAmount\",\n                  value: formData.discountAmount,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 661,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 659,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"testCreation_-list\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"totalPrice\",\n                  children: \"Total Price:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 670,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  id: \"totalPrice\",\n                  name: \"totalPrice\",\n                  value: formData.totalPrice,\n                  readOnly: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 671,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"create_exam_header\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ots_-createBtn\",\n                type: \"submit\",\n                children: \"Create Course\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create_exam_header\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"otc_-addExam\",\n          type: \"button\",\n          onClick: openForm,\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa-solid fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this), \"Add course\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      style: {\n        marginTop: '4rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"list_-otsTitels\",\n        children: \"created COURSES list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"couresCreation_-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          className: \"otsGEt_-contantHead couresotc_-table\",\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"no\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 701,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Course\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 702,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type of Test\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 703,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \" Exam\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Subjects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Type of Questions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 707,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 708,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Cost\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Discount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 710,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Total Price\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 711,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          className: \"couresotc_-table_-tBody\",\n          children: courseData.map((course, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: course.courseCreationId % 2 === 0 ? \"color1\" : \"color2\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.courseName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Array.isArray(course.typeOfTestName) && course.typeOfTestName.length > 0 ? course.typeOfTestName.join(\", \") : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 725,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.examName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Array.isArray(course.subjects) && course.subjects.length > 0 ? course.subjects.join(\", \") : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: Array.isArray(course.typeofQuestion) && course.typeofQuestion.length > 0 ? course.typeofQuestion.join(\", \") : \"N/A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.courseStartDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.courseEndDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.cost\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.Discount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: course.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"EditDelete_-btns\",\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  className: \"Ots_-edit\",\n                  to: `/courseupdate/${course.courseCreationId}`,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-solid fa-pencil\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 752,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 750,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"Ots_-delete\",\n                  onClick: () => handleDelete(course.courseCreationId),\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-regular fa-trash-can\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 759,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 755,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 749,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 17\n            }, this)]\n          }, course.courseCreationId, true, {\n            fileName: _jsxFileName,\n            lineNumber: 717,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 465,\n    columnNumber: 5\n  }, this);\n};\n_s(Coursecreation, \"nBdWKOrqLl1wR4mN5xIWdZX7+As=\");\n_c = Coursecreation;\nexport default Coursecreation;\nvar _c;\n$RefreshReg$(_c, \"Coursecreation\");","map":{"version":3,"names":["React","useState","useEffect","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Coursecreation","_s","Discount","setDiscount","cost","setCost","courseName","setCourseName","typeOfTest","setTypeOfTest","selectedtypeOfTest","setSelectedtypeOfTest","exams","setExams","selectedexams","setSelectedexams","selectedSubjects","setSelectedSubjects","typeofQuestion","setTypeofQuestion","selectedtypeofQuestion","setSelectedtypeofQuestion","startDate","setStartDate","endDate","setEndDate","subjectsData","setSubjectsData","isFormOpen","setIsFormOpen","courseData","setCourseData","formErrors","setFormErrors","submitting","setSubmitting","validateForm","errors","formData","trim","Date","length","examId","subjects","duration","isNaN","totalQuestions","totalMarks","selectedInstruction","Object","keys","resetFormFields","setFormData","courseStartDate","courseEndDate","discount","discountAmount","totalPrice","fetchSelectedExam","response","fetch","ok","Error","status","data","json","console","log","error","fetchCourseData","result","coursesWithArrays","map","course","typeOfTestName","type_of_test","split","question_types","then","catch","handleexams","event","selectedExamId","target","value","handleSubjectChange","subjectId","checked","prevSelectedSubjects","Set","filter","id","fetchTypeOfTest","handletypeoftest","typeOfTestId","prevSelectedTest","updatedSelectedTest","handleQuestionChange","questionTypeId","prevSelectedQuestions","updatedSelectedQuestions","fetchTypeOfQuestion","handleStartDateChange","e","formattedDate","handleEndDateChange","handleChange","name","parseFloat","handleSubmit","preventDefault","requiredFields","method","headers","body","JSON","stringify","courseCreationId","subjectsResponse","subjectIds","typeOfTestIds","subjectsResult","success","handleDelete","confirmDelete","window","confirm","message","updatedCourseData","openForm","closeForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","style","display","gap","type","onClick","htmlFor","onChange","class","typeofTest","includes","examName","subject","subjectName","quesionTypeId","min","toISOString","readOnly","marginTop","index","Array","isArray","join","to","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/EGATE_OTS_MAIN_PROJECT/src/components/Coursecreation.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./admin.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./css/Coursecreation.css\";\r\n\r\nconst Coursecreation = () => {\r\n  const [Discount, setDiscount] = useState('');\r\n  const [cost, setCost] = useState('');\r\n  // const [courseName, setCourseName] = useState([]);\r\n  const [courseName, setCourseName] = useState('');\r\n\r\n  const [typeOfTest, setTypeOfTest] = useState([]);\r\n  const [selectedtypeOfTest, setSelectedtypeOfTest] = useState([]);\r\n  const [exams, setExams] = useState([]);\r\n  const [selectedexams, setSelectedexams] = useState(\"\");\r\n  const [selectedSubjects, setSelectedSubjects] = useState([]);\r\n  const [typeofQuestion, setTypeofQuestion] = useState([]);\r\n  const [selectedtypeofQuestion, setSelectedtypeofQuestion] = useState([]);\r\n  const [startDate, setStartDate] = useState(\"\");\r\n  const [endDate, setEndDate] = useState(\"\");\r\n  const [subjectsData, setSubjectsData] = useState([]);\r\n  const [isFormOpen, setIsFormOpen] = useState(false);\r\n  const [courseData, setCourseData] = useState([]);\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [submitting, setSubmitting] = useState(false);\r\n  const validateForm = () => {\r\n    const errors = {};\r\n\r\n    if (!formData.courseName.trim()) {\r\n      errors.courseName = 'required';\r\n    }\r\n    \r\n    if (!formData.startDate) {\r\n      errors.startDate = 'required';\r\n    }\r\n\r\n    if (!formData.endDate) {\r\n      errors.endDate = 'required';\r\n    } else if (new Date(formData.endDate) < new Date(formData.startDate)) {\r\n      errors.endDate = 'End Date must be after Start Date';\r\n    }\r\n\r\n    if (!cost) {\r\n      errors.cost = ' required';\r\n    }\r\n    if (!Discount) {\r\n      errors.Discount = ' required';\r\n    }\r\n\r\n    // if (selectedSubjects.length === 0) {\r\n    //   errors.subjects = 'At least one subject must be selected';\r\n    // }\r\n    if (selectedtypeOfTest.length === 0) {\r\n      errors.typeOfTest = 'At least one Type of Test must be selected';\r\n    }\r\n\r\n    if (selectedtypeofQuestion.length === 0) {\r\n      errors.typeofQuestion = 'At least one Type of Question must be selected';\r\n    }\r\n    if (!selectedexams) {\r\n      errors.examId = 'Select Exam is required';\r\n    }\r\n  \r\n    if (selectedSubjects.length === 0) {\r\n      errors.subjects = 'At least one subject must be selected';\r\n    }\r\n      if (!duration || isNaN(duration) || duration <= 0) {\r\n    errors.duration = 'Please enter a valid duration (in minutes)';\r\n  }\r\n\r\n  if (!totalQuestions || isNaN(totalQuestions) || totalQuestions <= 0) {\r\n    errors.totalQuestions = 'Please enter a valid total number of questions';\r\n  }\r\n\r\n  if (!totalMarks || isNaN(totalMarks) || totalMarks <= 0) {\r\n    errors.totalMarks = 'Please enter a valid total marks';\r\n  }\r\n\r\n  if (!selectedInstruction) {\r\n    errors.selectedInstruction = 'Please select an instruction';\r\n  }\r\n    setFormErrors(errors);\r\n\r\n    return Object.keys(errors).length === 0;\r\n  };\r\n  const resetFormFields = () => {\r\n    setFormData({\r\n      courseName: \"\",\r\n      examId: \"\",\r\n      typeofQuestion: \"\",\r\n      courseStartDate: \"\",\r\n      courseEndDate: \"\",\r\n      cost: \"\",\r\n      discount: \"\",\r\n      discountAmount: \"\",\r\n      totalPrice: \"\",\r\n    });\r\n    setSelectedSubjects([]);\r\n    setSelectedtypeofQuestion([]);\r\n    setSelectedtypeOfTest([]);\r\n    setIsFormOpen(false);\r\n    setFormErrors({});\r\n  };\r\n\r\n  const [formData, setFormData] = useState({\r\n    courseName: \"\",\r\n    examId: \"\",\r\n    typeofQuestion: \"\",\r\n    courseStartDate: \"\",\r\n    courseEndDate: \"\",\r\n    cost: \"\",\r\n    discount: \"\",\r\n    discountAmount: \"\",\r\n    totalPrice: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchSelectedExam = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3081/courese-exams/${selectedexams}`\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        console.log(\"Selected Exam Data:\", data); // Log the fetched data\r\n\r\n        // Update your state or perform additional actions with the fetched data\r\n      } catch (error) {\r\n        console.error(\"Error fetching selected exam:\", error);\r\n      }\r\n    };\r\n\r\n    fetchSelectedExam();\r\n  }, [selectedexams]);\r\n\r\n  useEffect(() => {\r\n    const fetchCourseData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:3081/course_creation_table\"\r\n        );\r\n        const result = await response.json();\r\n        const coursesWithArrays = result.map((course) => ({\r\n          ...course,\r\n          typeOfTestName: course.type_of_test\r\n            ? course.type_of_test.split(\", \")\r\n            : [],\r\n          subjects: course.subjects ? course.subjects.split(\", \") : [],\r\n          typeofQuestion: course.question_types\r\n            ? course.question_types.split(\", \")\r\n            : [],\r\n        }));\r\n        setCourseData(coursesWithArrays);\r\n      } catch (error) {\r\n        console.error(\"Error fetching course data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCourseData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3081/courese-exams\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setExams(data);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching exams:\", error));\r\n  }, []);\r\n\r\n  const handleexams = async (event) => {\r\n    const selectedExamId = event.target.value;\r\n    console.log(\"Selected Exam ID:\", selectedExamId);\r\n    setSelectedexams(selectedExamId);\r\n    console.log(\"Selected Exam ID (after setting):\", selectedexams);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3081/courese-exam-subjects/${selectedExamId}/subjects`\r\n      );\r\n      const data = await response.json();\r\n      console.log(\"Subjects Data:\", data); // Log the fetched data\r\n      setSubjectsData(data); // Update subjectsData state\r\n      setSelectedSubjects([]); // Reset selected subjects\r\n    } catch (error) {\r\n      console.error(\"Error fetching subjects:\", error);\r\n    }\r\n\r\n    setSelectedexams(selectedExamId);\r\n  };\r\n\r\n  // const handleSubjectChange = (event, subjectId) => {\r\n  //   const { checked } = event.target;\r\n\r\n  //   const subject = subjectsData.find((subj) => subj.subjectId === subjectId);\r\n\r\n  //   if (subject) {\r\n  //     setSelectedSubjects((prevSelectedSubjects) => {\r\n  //       const updatedSelectedSubjects = checked\r\n  //         ? [...prevSelectedSubjects, subjectId]\r\n  //         : prevSelectedSubjects.filter((id) => id !== subjectId);\r\n\r\n  //       console.log('Selected Subjects:', updatedSelectedSubjects);\r\n  //       return updatedSelectedSubjects;\r\n  //     });\r\n  //   }\r\n  // };\r\n  const handleSubjectChange = (event, subjectId) => {\r\n    const { checked } = event.target;\r\n\r\n    setSelectedSubjects((prevSelectedSubjects) => {\r\n      if (checked) {\r\n        // Add the subjectId to the array if it's not already present\r\n        return [...new Set([...prevSelectedSubjects, subjectId])];\r\n      } else {\r\n        // Remove the subjectId from the array\r\n        return prevSelectedSubjects.filter((id) => id !== subjectId);\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTypeOfTest = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3081/type_of_tests\");\r\n        const result = await response.json();\r\n        setTypeOfTest(result);\r\n      } catch (error) {\r\n        console.error(\"Error fetching Type of questions:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTypeOfTest();\r\n  }, []);\r\n\r\n  const handletypeoftest = (event, typeOfTestId) => {\r\n    const { checked } = event.target;\r\n\r\n    setSelectedtypeOfTest((prevSelectedTest) => {\r\n      const updatedSelectedTest = checked\r\n        ? [...prevSelectedTest, typeOfTestId]\r\n        : prevSelectedTest.filter((id) => id !== typeOfTestId);\r\n\r\n      console.log(\"Selected Type of Test:\", updatedSelectedTest);\r\n      return updatedSelectedTest;\r\n    });\r\n  };\r\n\r\n  const handleQuestionChange = (event, questionTypeId) => {\r\n    const { checked } = event.target;\r\n\r\n    setSelectedtypeofQuestion((prevSelectedQuestions) => {\r\n      const updatedSelectedQuestions = checked\r\n        ? [...prevSelectedQuestions, questionTypeId]\r\n        : prevSelectedQuestions.filter((id) => id !== questionTypeId);\r\n\r\n      console.log(\"Selected Type of Questions:\", updatedSelectedQuestions);\r\n      return updatedSelectedQuestions;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchTypeOfQuestion = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:3081/type_of_questions\");\r\n        const result = await response.json();\r\n        // console.log(\"Type of Questions Data:\", result); // Add this line to log the data\r\n        setTypeofQuestion(result);\r\n      } catch (error) {\r\n        console.error(\"Error fetching Type of questions:\", error);\r\n      }\r\n    };\r\n\r\n    fetchTypeOfQuestion();\r\n  }, []);\r\n\r\n  const handleStartDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setStartDate(formattedDate);\r\n  };\r\n\r\n  const handleEndDateChange = (e) => {\r\n    const formattedDate = e.target.value;\r\n    setEndDate(formattedDate);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"cost\" || name === \"discount\") {\r\n      const cost = name === \"cost\" ? parseFloat(value) : formData.cost;\r\n      const discount =\r\n        name === \"discount\" ? parseFloat(value) : formData.discount;\r\n      const discountAmount =\r\n        !isNaN(cost) && !isNaN(discount) ? (cost * discount) / 100 : \"\";\r\n      const totalPrice =\r\n        !isNaN(cost) && !isNaN(discountAmount) ? cost - discountAmount : \"\";\r\n      setFormData({\r\n        ...formData,\r\n        typeOfTest: selectedtypeOfTest,\r\n        examId: selectedexams,\r\n        subjects: selectedSubjects,\r\n        typeofQuestion: selectedtypeofQuestion,\r\n        courseStartDate: startDate,\r\n        courseEndDate: endDate,\r\n        cost: cost,\r\n        discount: discount,\r\n        discountAmount: discountAmount,\r\n        totalPrice: totalPrice,\r\n      });\r\n    } else if (name === \"courseStartDate\" || name === \"courseEndDate\") {\r\n      setFormData({ ...formData, [name]: value });\r\n    } else {\r\n      setFormData({ ...formData, [name]: value });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const requiredFields = [\r\n      \"courseName\",\r\n      \"examId\",\r\n      \"courseStartDate\",\r\n      \"courseEndDate\",\r\n      \"cost\",\r\n      \"discount\",\r\n      \"totalPrice\",\r\n    ];\r\n\r\n    // const isEmptyField = requiredFields.some((field) => !formData[field]);\r\n\r\n    // if (isEmptyField) {\r\n    //   alert(\"Please fill in all required fields.\");\r\n    //   return;\r\n    // }\r\n    // window.location.reload();\r\n\r\n    // resetFormFields();\r\n\r\n    const data = {\r\n      ...formData,\r\n      typeOfTest: selectedtypeOfTest,\r\n      examId: selectedexams,\r\n      subjects: selectedSubjects,\r\n      typeofQuestion: selectedtypeofQuestion,\r\n    };\r\n if (validateForm()) {\r\n      setSubmitting(true);\r\n    try {\r\n      const response = await fetch(\"http://localhost:3081/course-creation\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(data),\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (result && result.courseCreationId) {\r\n        const courseCreationId = result.courseCreationId;\r\n        const subjectsResponse = await fetch(\r\n          \"http://localhost:3081/course_type_of_question\",\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n              courseCreationId,\r\n              subjectIds: selectedSubjects,\r\n              typeofQuestion: selectedtypeofQuestion,\r\n              typeOfTestIds: selectedtypeOfTest,\r\n            }),\r\n          }\r\n        );\r\n\r\n        const subjectsResult = await subjectsResponse.json();\r\n        console.log(\"Subjects Result:\", subjectsResult);\r\n        console.log(result);\r\n        if (result.success) {\r\n          console.log(\"Course created successfully\");\r\n        } else {\r\n          console.log(\"Failed to create course:\", result.error);\r\n        }\r\n      } else {\r\n        console.log(\"Failed to create course. Unexpected response:\", result);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error submitting course data:\", error);\r\n      // Handle error or show an error message to the user\r\n    }\r\nsetCourseName('');\r\nsetStartDate('');\r\nsetEndDate('');\r\nsetCost('');\r\nsetDiscount('');\r\nsetFormErrors({});\r\nsetIsFormOpen(false);\r\nsetSubmitting(false);\r\n\r\n\r\n  }\r\n  };\r\n\r\n  // function formatDate(dateString) {\r\n  //   const date = new Date(dateString);\r\n  //   const day = date.getDate().toString().padStart(2, \"0\");\r\n  //   const month = (date.getMonth() + 1).toString().padStart(2, \"0\"); // Month is 0-based\r\n  //   const year = date.getFullYear();\r\n  //   return `${day}/${month}/${year}`;\r\n  // }\r\n\r\n  const handleDelete = async (courseCreationId) => {\r\n    // Display a confirmation dialog before deleting\r\n    const confirmDelete = window.confirm(\r\n      \"Are you sure you want to delete this course?\"\r\n    );\r\n\r\n    if (confirmDelete) {\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:3081/course_creation_table_Delete/${courseCreationId}`,\r\n          {\r\n            method: \"DELETE\",\r\n          }\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! Status: ${response.status}`);\r\n        }\r\n\r\n        const result = await response.json();\r\n        console.log(result.message);\r\n        const updatedCourseData = courseData.filter(\r\n          (course) => course.courseCreationId !== courseCreationId\r\n        );\r\n        console.log(\"Before:\", courseData);\r\n        console.log(\"After:\", updatedCourseData);\r\n        setCourseData(updatedCourseData);\r\n      } catch (error) {\r\n        console.error(\"Error deleting course:\", error);\r\n      }\r\n    } else {\r\n      // The user canceled the deletion\r\n      console.log(\"Deletion canceled.\");\r\n    }\r\n  };\r\n\r\n  const openForm = () => {\r\n    setIsFormOpen(true);\r\n    if (isFormOpen) {\r\n      resetFormFields();\r\n    }\r\n  };\r\n\r\n  const closeForm = () => {\r\n    setIsFormOpen(false);\r\n    if (isFormOpen) {\r\n      resetFormFields();\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"otsMainPages\">\r\n      <div className=\"\">\r\n        <h3 className=\"Coures_-otsTitels\">Courses page</h3>\r\n\r\n        {isFormOpen ? (\r\n          <>\r\n            <form onSubmit={handleSubmit}>\r\n              <div\r\n                className=\"create_exam_header\"\r\n                style={{ display: \"flex\", gap: \"1rem\" }}\r\n              >\r\n                <button className=\"ots_btnClose \" type=\"button\" onClick={closeForm}>\r\n                  Close\r\n                 \r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"coures_-container\">\r\n                <div className=\"coures-contant_-flexCOntantc examSubjects_-contant\">\r\n                  <div className=\"testCreation_-list\">\r\n                    <label htmlFor=\"courseName\">Course Name:</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      id=\"courseName\"\r\n                      name=\"courseName\"\r\n                      value={formData.courseName}\r\n                      onChange={handleChange}\r\n                    />\r\n                    {formErrors.courseName && <span className=\"error-message\"><i class=\"fa-solid fa-circle\"></i>{formErrors.courseName}</span>}\r\n                  </div>\r\n\r\n                  <div className=\"testCreation_-list\">\r\n                    <label>type of test:</label>\r\n                    <div className=\"coures_-typeOfTest\">\r\n                      {typeOfTest.map((typeofTest) => (\r\n                        <div\r\n                          className=\"course_checkbox_continer course_frominput_container_media\"\r\n                          key={typeofTest.typeOfTestId}\r\n                        >\r\n                          <label\r\n                            htmlFor={`question-${typeofTest.typeOfTestId}`}\r\n                          >\r\n                            {typeofTest.typeOfTestName}\r\n                          </label>\r\n                          <input\r\n                            className=\"inputLable\"\r\n                            type=\"checkbox\"\r\n                            id={`typeofTest-${typeofTest.typeOfTestId}`}\r\n                            name={`typeofTest-${typeofTest.typeOfTestId}`}\r\n                            value={typeofTest.typeOfTestId}\r\n                            checked={selectedtypeOfTest.includes(\r\n                              typeofTest.typeOfTestId\r\n                            )}\r\n                            onChange={(e) =>\r\n                              handletypeoftest(e, typeofTest.typeOfTestId)\r\n                            }\r\n                          />\r\n                           \r\n                        </div>\r\n                      ))}{formErrors.typeOfTest && <span className=\"error-message\"><i class=\"fa-solid fa-circle\"></i>{formErrors.typeOfTest}</span>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"coures-contant_-flexCOntantc examSubjects_-contant\">\r\n                  <div className=\"testCreation_-list\">\r\n                    <label htmlFor=\"exams\">Select Exam:</label>\r\n                    <select\r\n                      id=\"exams\"\r\n                      value={selectedexams}\r\n                      onChange={handleexams}\r\n                    > \r\n                      <option value=\"\">Select exams</option>\r\n                      {exams.map((exams) => (\r\n                        <option key={exams.examId} value={exams.examId}>\r\n                          {exams.examName}\r\n                        </option>\r\n                      ))}\r\n                    </select> {formErrors.examId && <span className=\"error-message\"><i class=\"fa-solid fa-circle\"></i>{formErrors.examId}</span>}\r\n                  </div>\r\n\r\n                  <div className=\"testCreation_-list\">\r\n                    <label>Select Subjects:</label>\r\n                    <div className=\"coures_-Subjects\">\r\n                      {subjectsData.map((subject) => (\r\n                        <div\r\n                          className=\"course_frominput_container \"\r\n                          id=\"course_frominput_container_media\"\r\n                          key={subject.subjectId}\r\n                        >\r\n                          <label htmlFor={`subject-${subject.subjectId}`}>\r\n                            {subject.subjectName}\r\n                          </label>\r\n                          <input\r\n                            className=\"inputLable\"\r\n                            type=\"checkbox\"\r\n                            id={`subject-${subject.subjectId}`}\r\n                            name={`subject-${subject.subjectId}`}\r\n                            value={subject.subjectId}\r\n                            checked={selectedSubjects.includes(\r\n                              subject.subjectId\r\n                            )}\r\n                            onChange={(e) =>\r\n                              handleSubjectChange(e, subject.subjectId)\r\n                            }\r\n                          /> \r\n                        </div>\r\n                      ))}{formErrors.subjectsData && <span className=\"error-message\"><i class=\"fa-solid fa-circle\"></i>{formErrors.subjectsData}</span>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"coures-contant_-flexCOntantc examSubjects_-contant\">\r\n                  <div className=\"testCreation_-list\">\r\n                    <label>type of Questions:</label>\r\n                    <div className=\"course_checkbox_continer_content\">\r\n                      {typeofQuestion.map((type) => (\r\n                        <div\r\n                          className=\"course_checkbox_continer course_frominput_container_media\"\r\n                          key={type.quesionTypeId}\r\n                        >\r\n                          <label htmlFor={`question-${type.quesionTypeId}`}>\r\n                            {type.typeofQuestion}\r\n                          </label>\r\n                          <input\r\n                            className=\"inputLable\"\r\n                            type=\"checkbox\"\r\n                            id={`question-${type.quesionTypeId}`}\r\n                            name={`question-${type.quesionTypeId}`}\r\n                            value={type.quesionTypeId}\r\n                            checked={selectedtypeofQuestion.includes(\r\n                              type.quesionTypeId\r\n                            )}\r\n                            onChange={(e) =>\r\n                              handleQuestionChange(e, type.quesionTypeId)\r\n                            }\r\n                          />\r\n                        </div>\r\n                      ))} {formErrors.typeofQuestion && <span className=\"error-message\"><i class=\"fa-solid fa-circle\"></i>{formErrors.typeofQuestion}</span>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"coures-contant_-flexCOntantc examSubjects_-contant\">\r\n                  <div className=\"testCreation_-list\">\r\n                    <label htmlFor=\"courseStartDate\">Course Start Date:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"courseStartDate\"\r\n                      name=\"courseStartDate\"\r\n                      value={startDate}\r\n                      onChange={handleStartDateChange}\r\n                      min={new Date().toISOString().split(\"T\")[0]}\r\n                    /> {formErrors.startDate && <span className=\"error-message\"><i class=\"fa-solid fa-circle\"></i>{formErrors.startDate}</span>}\r\n                  </div>\r\n\r\n                  <div className=\"testCreation_-list\">\r\n                    <label htmlFor=\"courseEndDate\">Course End Date:</label>\r\n                    <input\r\n                      type=\"date\"\r\n                      id=\"courseEndDate\"\r\n                      name=\"courseEndDate\"\r\n                      value={endDate}\r\n                      onChange={handleEndDateChange}\r\n                      min={new Date().toISOString().split(\"T\")[0]}\r\n                    />\r\n                    {formErrors.endDate && <span className=\"error-message\"><i class=\"fa-solid fa-circle\"></i>{formErrors.endDate}</span>}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"coures-contant_-flexCOntantc examSubjects_-contant\">\r\n                  <div className=\"testCreation_-list\">\r\n                    <label htmlFor=\"cost\">Cost:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"cost\"\r\n                      name=\"cost\"\r\n                      value={formData.cost}\r\n                      onChange={handleChange}\r\n                    />  {formErrors.cost && <span className=\"error-message\"><i class=\"fa-solid fa-circle\"></i>{formErrors.cost}</span>}\r\n                  </div>\r\n                  <div className=\"testCreation_-list\">\r\n                    <label htmlFor=\"discount\">Discount (%):</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"discount\"\r\n                      name=\"discount\"\r\n                      value={formData.discount}\r\n                      onChange={handleChange}\r\n                    /> {formErrors.discount && <span className=\"error-message\"><i class=\"fa-solid fa-circle\"></i>{formErrors.discount}</span>}\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"coures-contant_-flexCOntantc examSubjects_-contant\">\r\n                  <div className=\"testCreation_-list\">\r\n                    <label htmlFor=\"discountAmount\">Discount Amount:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"discountAmount\"\r\n                      name=\"discountAmount\"\r\n                      value={formData.discountAmount}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                  <div className=\"testCreation_-list\">\r\n                    <label htmlFor=\"totalPrice\">Total Price:</label>\r\n                    <input\r\n                      type=\"number\"\r\n                      id=\"totalPrice\"\r\n                      name=\"totalPrice\"\r\n                      value={formData.totalPrice}\r\n                      readOnly\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"create_exam_header\">\r\n                  <button className=\"ots_-createBtn\" type=\"submit\">Create Course</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </>\r\n        ) : (\r\n          <div className=\"create_exam_header\">\r\n           \r\n            <button className=\"otc_-addExam\" type=\"button\" onClick={openForm}>\r\n            <i class=\"fa-solid fa-plus\"></i> \r\n               Add course\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"\"  style={{marginTop:'4rem'}}>\r\n      <h3 className=\"list_-otsTitels\">created COURSES list</h3>\r\n        <table className=\"couresCreation_-table\">\r\n          <thead className=\"otsGEt_-contantHead couresotc_-table\">\r\n            <tr>\r\n              <th>no</th>\r\n              <th>Course</th>\r\n              <th>Type of Test</th>\r\n              <th> Exam</th>\r\n              <th>Subjects</th>\r\n              <th>Type of Questions</th>\r\n              <th>Start Date</th>\r\n              <th>End Date</th>\r\n              <th>Cost</th>\r\n              <th>Discount</th>\r\n              <th>Total Price</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className=\"couresotc_-table_-tBody\">\r\n            {courseData.map((course, index) => (\r\n              <tr\r\n                key={course.courseCreationId}\r\n                className={\r\n                  course.courseCreationId % 2 === 0 ? \"color1\" : \"color2\"\r\n                }\r\n              >\r\n                <td>{index + 1}</td>\r\n                <td>{course.courseName}</td>\r\n                <td>\r\n                  {Array.isArray(course.typeOfTestName) &&\r\n                  course.typeOfTestName.length > 0\r\n                    ? course.typeOfTestName.join(\", \")\r\n                    : \"N/A\"}\r\n                </td>\r\n                <td>{course.examName}</td>\r\n                <td>\r\n                  {Array.isArray(course.subjects) && course.subjects.length > 0\r\n                    ? course.subjects.join(\", \")\r\n                    : \"N/A\"}\r\n                </td>\r\n                <td>\r\n                  {Array.isArray(course.typeofQuestion) &&\r\n                  course.typeofQuestion.length > 0\r\n                    ? course.typeofQuestion.join(\", \")\r\n                    : \"N/A\"}\r\n                </td>\r\n                <td>{course.courseStartDate}</td>\r\n                <td>{course.courseEndDate}</td>\r\n                <td>{course.cost}</td>\r\n                <td>{course.Discount}</td>\r\n                <td>{course.totalPrice}</td>\r\n                <td>\r\n                  <div className=\"EditDelete_-btns\">\r\n                    <Link className=\"Ots_-edit\" to={`/courseupdate/${course.courseCreationId}`}>\r\n                     \r\n                        <i className=\"fa-solid fa-pencil\"></i>\r\n                    \r\n                    </Link>\r\n                    <button\r\n                 className=\"Ots_-delete\"\r\n                      onClick={() => handleDelete(course.courseCreationId)}\r\n                    >\r\n                      <i className=\"fa-regular fa-trash-can\"></i>\r\n                    </button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Coursecreation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}