{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\mvc\\\\src\\\\Components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useFetchCount = url => {\n  _s();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      // Assuming data is an array and the count is in the first object\n      const firstObject = data[0];\n      const totalCount = firstObject ? firstObject.count : 0;\n      console.log(\"Data received:\", totalCount);\n      setCount(totalCount);\n    }).catch(error => console.error(`Error fetching count from ${url}:`, error.message));\n  }, [url]);\n  return count;\n};\n_s(useFetchCount, \"f6rNyXb4nKr8df0VUP2jADfsx6o=\");\nconst Dashboard = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","useFetchCount","url","_s","count","setCount","useEffect","fetch","then","response","ok","Error","json","data","firstObject","totalCount","console","log","catch","error","message","Dashboard","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/mvc/src/Components/Dashboard.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nconst useFetchCount = (url) => {\r\nconst [count,setCount] = useState(0);\r\n\r\nuseEffect(() => {\r\nfetch(url)\r\n.then((response) => {\r\n  if (!response.ok) {\r\n    throw new Error(\"Network response was not ok\");\r\n  }\r\n  return response.json();\r\n})\r\n.then((data) => {\r\n  // Assuming data is an array and the count is in the first object\r\n  const firstObject = data[0];\r\n  const totalCount = firstObject ? firstObject.count : 0;\r\n\r\n  console.log(\"Data received:\", totalCount);\r\n  setCount(totalCount);\r\n})\r\n.catch((error) =>\r\n  console.error(`Error fetching count from ${url}:`, error.message)\r\n);\r\n}, [url]);\r\n\r\nreturn count;\r\n};\r\nconst Dashboard = () => {\r\n   \r\n  return (\r\n    <div>\r\n        \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACvC,MAAMC,aAAa,GAAIC,GAAG,IAAK;EAAAC,EAAA;EAC/B,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEpCQ,SAAS,CAAC,MAAM;IAChBC,KAAK,CAACL,GAAG,CAAC,CACTM,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd;MACA,MAAMC,WAAW,GAAGD,IAAI,CAAC,CAAC,CAAC;MAC3B,MAAME,UAAU,GAAGD,WAAW,GAAGA,WAAW,CAACV,KAAK,GAAG,CAAC;MAEtDY,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,UAAU,CAAC;MACzCV,QAAQ,CAACU,UAAU,CAAC;IACtB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IACXH,OAAO,CAACG,KAAK,CAAE,6BAA4BjB,GAAI,GAAE,EAAEiB,KAAK,CAACC,OAAO,CAClE,CAAC;EACD,CAAC,EAAE,CAAClB,GAAG,CAAC,CAAC;EAET,OAAOE,KAAK;AACZ,CAAC;AAACD,EAAA,CAzBIF,aAAa;AA0BnB,MAAMoB,SAAS,GAAGA,CAAA,KAAM;EAEtB,oBACErB,OAAA;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGK,CAAC;AAEV,CAAC;AAAAC,EAAA,GARKL,SAAS;AAUf,eAAeA,SAAS;AAAA,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}