{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Desktop\\\\mvc\\\\src\\\\Components\\\\Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    fetch(url).then(response => {\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      return response.json();\n    }).then(data => {\n      // Assuming data is an array and the count is in the first object\n      const firstObject = data[0];\n      const totalCount = firstObject ? firstObject.count : 0;\n      console.log(\"Data received:\", totalCount);\n      setCount(totalCount);\n    }).catch(error => console.error(`Error fetching count from ${url}:`, error.message));\n  }, [url]);\n  return count;\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"f6rNyXb4nKr8df0VUP2jADfsx6o=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Dashboard","_s","count","setCount","useEffect","fetch","url","then","response","ok","Error","json","data","firstObject","totalCount","console","log","catch","error","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Desktop/mvc/src/Components/Dashboard.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Dashboard = () => {\r\n    const [count,setCount] = useState(0);\r\n\r\n      useEffect(() => {\r\n    fetch(url)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error(\"Network response was not ok\");\r\n        }\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        // Assuming data is an array and the count is in the first object\r\n        const firstObject = data[0];\r\n        const totalCount = firstObject ? firstObject.count : 0;\r\n\r\n        console.log(\"Data received:\", totalCount);\r\n        setCount(totalCount);\r\n      })\r\n      .catch((error) =>\r\n        console.error(`Error fetching count from ${url}:`, error.message)\r\n      );\r\n  }, [url]);\r\n\r\n  return count;\r\n  return (\r\n    <div>\r\n        \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Dashboard"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAACC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EAElCO,SAAS,CAAC,MAAM;IAClBC,KAAK,CAACC,GAAG,CAAC,CACPC,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDJ,IAAI,CAAEK,IAAI,IAAK;MACd;MACA,MAAMC,WAAW,GAAGD,IAAI,CAAC,CAAC,CAAC;MAC3B,MAAME,UAAU,GAAGD,WAAW,GAAGA,WAAW,CAACX,KAAK,GAAG,CAAC;MAEtDa,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,UAAU,CAAC;MACzCX,QAAQ,CAACW,UAAU,CAAC;IACtB,CAAC,CAAC,CACDG,KAAK,CAAEC,KAAK,IACXH,OAAO,CAACG,KAAK,CAAE,6BAA4BZ,GAAI,GAAE,EAAEY,KAAK,CAACC,OAAO,CAClE,CAAC;EACL,CAAC,EAAE,CAACb,GAAG,CAAC,CAAC;EAET,OAAOJ,KAAK;EACZ,oBACEH,OAAA;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGK,CAAC;AAEV,CAAC;AAAAtB,EAAA,CA/BKD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAiCf,eAAeA,SAAS;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}